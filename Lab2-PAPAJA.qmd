---
title: "PAPAJA Manuscript"
editor: visual
---

# Lab Goals

-   Create the following APA style document (https://github.com/ndphillips/IntroductionR_Course/blob/master/assignments/wpa/studentAPA/studentAPA_comp.pdf? raw=true)) using R markdown and the papaja package
-   Automatically create APA style statistical conclusions from R objects using papaja::apa_print()
-   Cite articles using .bib files and appropriate bibtex citations.
-   Use in-line chunks to incorporate R output directly into your text.

## Get Started

1.  In the project directory, create a folder called data.

2.  The two data files you need for this assignment are located at <https://raw.githubusercontent.com/ndphillips/IntroductionR_Course/master/assignments/wpa/data/studentmath.txt> (the mathdata) and <https://raw.githubusercontent.com/ndphillips/IntroductionR_Course/master/assignments/wpa/data/studentpor.txt> (the portugesedata), we need to get these files into your data folder. To do this, read the files and save me them to their respective folders.

```{=html}
<!-- -->
```
3.  Open a new R Markdown document using the `papaja` template. Save the file in the top level of your working directory (that is, next to the Lab2-RMD.Rproj ) as studentAPA.Rmd

4.  Open up Test_MS.RMD

5.  Copy all of the text, and paste it into your studentAPA.Rmd file (replace all of the text that was there before). Save the file.

6.  Open a new text file by clicking File -- New File -- Text File. Save the file in the top level of your working directory as studentAPA.bib

    -   In a web browser, go to <https://raw.githubusercontent.com/ndphillips/IntroductionR_Course/master/assignments/wpa/studentAPA/studentAPA.bib>

    -   Copy all of the text, and paste it into your studentAPA.bib file. Save the file.

7.  Your goal is to create the following APA document( <https://github.com/ndphillips/IntroductionR_Course/blob/master/assignments/wpa/studentAPA/studentAPA_comp.pdf?raw=true)> by adding elements to the studentAPA.Rmd document. In a web browser, go to the link above to download the studentAPA_comp.pdf file and see how it looks.

## Adding titles and knitting

8.  In studentAPA.Rmd, replace the X values in the main fields at the top of the document (name, paper title, short-title, affiliation) with the appropriate names and titles.
9.  Now Knit your document to see the current version of the PDF output! You can do this by clicking the "Knit" button at the top of your window or by using the Command + Shift + K shortcut (on Mac).

## Add References to .bib

10. Now it's time to add some references to your studentAPA.bib file! You will be referencing three papers in this document. Using scholar.google.com (scholar.google.com), find the BibTeX references for the following paper(s) and add them to your studentAPA.bib file. Make sure to save the file!

    -   Horwitz, Elaine K., Michael B. Horwitz, and Joann Cope. "Foreign language classroom anxiety." The modern language journal70.2 (1986): 125-132.

    -   Collier, V. P. (1992). A synthesis of studies examining long-term language minority student data on academic achievement.Bilingual Research Journal, 16(1-2), 187-212.

    -   Abedi, J., & Lord, C. (2001). The language factor in mathematics tests. Applied Measurement in Education, 14(3), 219-234.

11. Now it's time to cite your new references. I've included one citation already in the studentAPA.Rmd document in the format\@abedi2001language. Now cite the additional papers in your studentAPA.bib file by replacing the XXX values with the appropriate citations. Knit your document to see the result.

## Load Data

12. You need to load your data in a separate chunk. Load the data using the URLs above. **Knit your document to see the result** If you don't see any errors, then the data should have been correctly loaded!
13. In the Participants section, there are inline code chunks that should indicate the number of participants in each data set. Replace the 1+1 values with nrow(student.por) and nrow(student.math) to get the number of students in each data set. Knit yourvdocument to see the result

## Add Plots

14. In the Results section, I've included a chunk called fig1 that creates Figure 1, a series of histograms. Update the caption to the plot in the chunk options. Then change eval = FALSE to eval = TRUE to tell Markdown to run the chunk. Knit your document to see the result. You should now see the histograms in your document!
15. There is another chunk called fig2 that plots the correlations between numeric predictors in the math data. Turn on the chunk by setting eval = TRUE , update the caption. **Knit your document to see the result**

## Look at Different Document Classes

16. You can render your document in one of three document classes: doc (document), man (manuscript) and pub (publication). At the top of your Markdown file, you'll see the text class: man. Change the class to doc and knit. Then change the class to pub and knit. Look at the new outputs!

## Add Statistics

17. Below the first chunk, there are some inline chunks that calculate the mean grades for exam 1 and exam 3 of the Portuguese data. Update these chunks with the correct code to calculate the mean G3 scores for the math and Portuguese datasets.

    **Knit your document to see the result**.

18. The next two chunks create tables of summary statistics for the Math and Portuguese data. Update the captions in these chunks.Then, change eval = FALSE to eval = TRUE in the chunk options. **Knit your document to see the result**. You should now see the tables in your document.

19. The next chunk conducts and saves t-tests for both the math and Portuguese data. The code for the Portuguese test sex.por.ttest is already completed, but the code to create a similar test for the math data is missing. Add the code for the math test to create the object sex.math.ttest. Then, change eval = FALSE to eval = TRUE in the chunk options.

20. The next lines use inline code to refer to the results of your t-test objects. Replace the 1+1 values with `papaja::apa_print(sex.por.ttest)`\$full_result and \`papaja::apa_print(sex.math.ttest)\$full_result\`

    **Knit your document to see the result**.

## QMD

-   Do the same thing, but use `apaquarto`

# Submit

21. Push all your files to your Github repository.
